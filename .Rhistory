-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
eye = diag(4)
elim_1 = eye
elim_1[1,2] = 3
elim_1[2,3] = -1
A = elim_1 %*% A
elim_2 = eye
elim_2[1,4] = 11
A = elim_2 %*% A
elim_3 = eye
elim_3[3, 1] = 1
A = elim_3 %*%A
elim_4 = eye
elim_4[4, 2] = 1/4
A = elim_4 %*%A
elim_5 = eye
elim_5[4, 3] = -1/4
A = elim_5 %*% A
A
elim_6 = eye
elim_6[2,2] = 1/4
A = elim_6 %*% A
A
A = matrix(data = c(4, -1, -1, 0, 1, 0, 0, 0,
-1, 4, 0, -1, 0 , 1, 0, 0,
-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
eye = diag(4)
elim_1 = eye
elim_1[1,2] = 3
elim_1[2,3] = -1
A = elim_1 %*% A
elim_2 = eye
elim_2[1,4] = 11
A = elim_2 %*% A
elim_3 = eye
elim_3[3, 1] = 1
A = elim_3 %*%A
elim_4 = eye
elim_4[4, 2] = 1/4
A = elim_4 %*%A
elim_5 = eye
elim_5[4, 3] = -1/4
A = elim_5 %*% A
elim_6 = eye
elim_6[2,2] = 1/4
elim_6[3, 3] = -1/8
elim_6[4,4] = -1/6
A = elim_6 %*% A
A
elim_7 = eye
elim_7[3, 4] = 5
A = elim_7 %*% A
A
elim_8 = eye
elim_8[2, 3] = 1
A = elim_8 %*% A
A
A = matrix(data = c(4, -1, -1, 0, 1, 0, 0, 0,
-1, 4, 0, -1, 0 , 1, 0, 0,
-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
eye = diag(4)
elim_1 = eye
elim_1[1,2] = 3
elim_1[2,3] = -1
A = elim_1 %*% A
elim_2 = eye
elim_2[1,4] = 11
A = elim_2 %*% A
elim_3 = eye
elim_3[3, 1] = 1
A = elim_3 %*%A
elim_4 = eye
elim_4[4, 2] = 1/4
A = elim_4 %*%A
elim_5 = eye
elim_5[4, 3] = -1/4
A = elim_5 %*% A
elim_6 = eye
elim_6[2,2] = 1/4
elim_6[3, 3] = -1/8
elim_6[4,4] = -1/6
A = elim_6 %*% A
elim_7 = eye
elim_7[3, 4] = 5
A = elim_7 %*% A
elim_8 = eye
elim_8[2, 3] = 1
A = elim_8 %*% A
elim_9 = eye
elim_9[1, 4] = -41
elim_9[1, 3] = 12
A = elim_9 %*% A
A
rref(A)
A = matrix(data = c(4, -1, -1, 0, 1, 0, 0, 0,
-1, 4, 0, -1, 0 , 1, 0, 0,
-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
eye = diag(4)
elim_1 = eye
elim_1[1,2] = 3
elim_1[2,3] = -1
A = elim_1 %*% A
A
elim_2 = eye
elim_2[1,4] = 11
A = elim_2 %*% A
A
elim_3 = eye
elim_3[3, 1] = 1
A = elim_3 %*%A
A
elim_4 = eye
elim_4[4, 2] = 1/4
A = elim_4 %*%A
A
elim_5 = eye
elim_5[4, 3] = -1/4
A = elim_5 %*% A
A
elim_6 = eye
elim_6[2,2] = 1/4
elim_6[3, 3] = -1/8
elim_6[4,4] = -1/6
A = elim_6 %*% A
A
elim_7 = eye
elim_7[3, 4] = 5
A = elim_7 %*% A
A
elim_8 = eye
elim_8[2, 3] = 1
A = elim_8 %*% A
A
elim_9 = eye
elim_9[1, 4] = -41
elim_9[1, 3] = 12
A = elim_9 %*% A
A
19/24
2/24
7/24
1/12
1/24
A_inv
12*A_inv
24*A_inv
test = 24*A_inv
test/24
A_inv
A%*%A_inv
A*A_inv
A
A = matrix(data = c(4, -1, -1, 0, 1, 0, 0, 0,
-1, 4, 0, -1, 0 , 1, 0, 0,
-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
A[,1:4]*A_inv
A[,1:4]%*%A_inv
A_inv
A = matrix(data = c(4, -1, -1, 0, 1, 0, 0, 0,
-1, 4, 0, -1, 0 , 1, 0, 0,
-1, 0, 4, -1, 0, 0, 1, 0,
0, -1, -1, 4, 0, 0, 0, 1),
nrow = 4,
ncol = 8,
byrow = TRUE)
A
A_inv = rref(A)
A_inv = A_inv[,5:8]
A_inv
B = matrix( data = c(20, 50, 15, 45),
nrow = 4,
ncol = 1,
byrow = TRUE
)
ans = A_inv %*% B
ans
A_inv
A
B
A_inv%*%B
## x + 2y + 3z = 1
## 2x + 4y +7z = 2
## 3x + 7y +11z = 8
## First we set a 3X3 identity matrix to be used for our eliminations
eye = diag(3)
eye
## Construct a 3X4 matrix containing our numbers
dat = matrix(
c(1, 2, 3, 2, 4, 7, 3, 7, 11, 1, 2, 8),
nrow = 3,
ncol = 4
)
dat
## First elimination: -2 * 1st row added to the second row, -3 * 1st row added to third row
## Matrix multiplication to eliminate
elim_1 = eye
elim_1[2, 1] = -2
elim_1[3, 1] = -3
elim_1
dat = elim_1 %*% dat
print(dat)
## Next we switch rows 2 and 3 in the matrix, and perform second elimination:
## -2 * 2nd row added to 1st row
## Matrix multiplication to eliminate
dat2 = dat
dat2[2,] = dat[3,]
dat2[3,] = dat[2,]
elim_2 = eye
elim_2[1, 2] = -2
elim_2
dat2 = elim_2 %*% dat2
print(dat2)
## Lastly we perform our third elimination: add third row to first row, -2 * third row added to
## second
## Matrix multiplication and voila, we have our answer in the matrix dat3
elim_3 = eye
elim_3[1, 3] = 1
elim_3[2, 3] = -2
elim_3
dat3 = dat2
dat3 = elim_3 %*% dat3
print(dat3)
19+14
140/26
140*5
26*5
220/26
26*8
208-220
180/26
26*6
156-180
A = matrix(c(3, 10, 20, 20, 9, 17, 9, 4, 17), nrow = 3, ncol = 3, byrow = TRUE)
A
v = vector(19, 7, 14)
v = c(19, 7, 14)
v
A%*%v
19*3+19*10+19*20
7*20+7*9+7*17
407/26
26*15
390-407
26*15
407-390
19*3+10*19+20*19
627/26
24*26
624-627
17*21+25*22+4*17
21*2+25*9+11*17
21*4+25*6+17*13
1*17+22*22+24*4
1*2+22*9+24*11
1*4+22*6+24*13
18*17+20*22+19*4
18*8+20*9+19*11
18*4+20*6+19*13
975/26
26*37
962-975
597/26
22*26
572-597
822/26
(31*26)-822
454/26
26*17-454
464/26
17*26-464
533/26
26*20-533
455/26
26*17-455
448/26
26*17-448
439/26
16*26-439
26*2
26*3
26*4
26*5
26*6
26*7
26*8
26*9
26*11
26*12
26*13
26*14
26*15
26*16
26*17
26*18
26*19
26*20
26*21
26*22
26*23
26*24
26*26
26*27
26*28
26*29
26*30
26*31
26*32
26*33
26*34
26*35
26*36
26*37
26*38
27/10
2.7*18
/26
48.6/26
48.6-26*1
26*2
/4
52/4
52/26
13*7
/26
91/26
26*3
78-91
91/26
26*3-91
21*13
273/26
26*10-273
9*19+1
172/26
26*6-172
9*4+3
39/26
26*1-39
22*19
+7
481+7
488/26
26*18-488
22*4
88+21
109/26
26*4-109
22*4
88+21
109/26
26*4-109
16+40
56/26
16+60
76/26
16+80
96/26
26**7
26*7
26*8
26*5
setwd("C:/Users/thealy/Documents/MATH 240/Week 8")
library(plyr)
library(reshape2)
library(Quandl)
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat[is.na(crime_dat)] = 0
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
hvi_dat = read.csv("Neighborhood_medianValuePerSqft_AllHomes.csv")
hvi_dat = subset(hvi_dat, hvi_dat$City == "Baltimore")
hvi_dat = hvi_dat[,c("RegionName","X2016.03")]
colnames(hvi_dat)[1] = "Neighborhood"
data = merge(crime_dat, hvi_dat, by = "Neighborhood")
y = data[,length(colnames(data))]
m = length(y)
X = as.matrix(data[,3:length(colnames(data))-1])
theta = as.vector( solve(t(X) %*% X) %*% t(X)%*%y )
result = cbind("Crime" = colnames(X), theta)
result
setwd("C:/Users/thealy/Documents/MATH 240/Week 8")
list.files()
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat[is.na(crime_dat)] = 0
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
setwd("C:/Users/thealy/Documents/MATH 240/MATH240")
library(plyr)
library(reshape2)
library(Quandl)
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat[is.na(crime_dat)] = 0
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
hvi_dat = read.csv("Neighborhood_medianValuePerSqft_AllHomes.csv")
hvi_dat = subset(hvi_dat, hvi_dat$City == "Baltimore")
hvi_dat = hvi_dat[,c("RegionName","X2016.03")]
colnames(hvi_dat)[1] = "Neighborhood"
data = merge(crime_dat, hvi_dat, by = "Neighborhood")
y = data[,length(colnames(data))]
m = length(y)
X = as.matrix(data[,3:length(colnames(data))-1])
theta = as.vector( solve(t(X) %*% X) %*% t(X)%*%y )
result = cbind("Crime" = colnames(X), theta)
result
eigen(X)
X
setwd("C:/Users/thealy/Documents/MATH 240/MATH240")
library(plyr)
library(reshape2)
library(Quandl)
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat[is.na(crime_dat)] = 0
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
hvi_dat = read.csv("Neighborhood_medianValuePerSqft_AllHomes.csv")
hvi_dat = subset(hvi_dat, hvi_dat$City == "Baltimore")
hvi_dat = hvi_dat[,c("RegionName","X2016.03")]
colnames(hvi_dat)[1] = "Neighborhood"
data = merge(crime_dat, hvi_dat, by = "Neighborhood")
y = data[,length(colnames(data))]
m = length(y)
X = as.matrix(data[,3:length(colnames(data))-1])
theta = as.vector( solve(t(X) %*% X) %*% t(X)%*%y )
result = cbind("Crime" = colnames(X), theta)
result
X
length(rownames(X))
rownames(X)
X
length(X[,1])
crime_dat
head(crime_dat)
head(crime_dat, 20)
library(xlsx)
library(rJava)
write.csv(ex_1)
ex_1 = head(crime_dat, 20)
write.csv(ex_1)
install.packages("xlsx")
library(xlsx)
write.xlsx(ex_1)
write.csv(crime_dat)
head(crime_dat)
crime_dat = crime_dat[2:nrow(crime_dat),]
crime_dat
head(crime_dat)
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat[is.na(crime_dat)] = 0
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
crime_dat = crime_dat[2:nrow(crime_dat),]
hvi_dat = read.csv("Neighborhood_medianValuePerSqft_AllHomes.csv")
hvi_dat = subset(hvi_dat, hvi_dat$City == "Baltimore")
hvi_dat = hvi_dat[,c("RegionName","X2016.03")]
colnames(hvi_dat)[1] = "Neighborhood"
data = merge(crime_dat, hvi_dat, by = "Neighborhood")
y = data[,length(colnames(data))]
m = length(y)
X = as.matrix(data[,3:length(colnames(data))-1])
theta = as.vector( solve(t(X) %*% X) %*% t(X)%*%y )
result = cbind("Crime" = colnames(X), theta)
result
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
crime_dat = crime_dat[2:nrow(crime_dat),]
head(crime_dat)
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
length(crime_dat$CrimeDate)
unique(crime_dat$CrimeDate)
colnames(X)
length(colnames(X))
write.csv(head(crime_dat))
crime_dat = read.csv("BPD_Part_1_Victim_Based_Crime_Data.csv")
crime_dat = ddply(crime_dat, c("Neighborhood", "Description"), summarise, Crimes = sum(Total.Incidents))
crime_dat = dcast(crime_dat, Neighborhood ~ Description, value.var="Crimes")
crime_dat[is.na(crime_dat)] = 0
crime_dat = crime_dat[2:nrow(crime_dat),]
write.csv(head(crime_dat))
length(crime_dat$Neighborhood)
